{"version":3,"file":"static/js/105.6f7f7b4b.chunk.js","mappings":"gRAAMA,EAAM,4CACNC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAmCC,EAAnC,+BAAyC,GAAzC,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,eAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAoB,GAAD,OAAID,EAAJ,+BAAmCD,GAC9D,CAEM,SAASY,EAAgBC,GAC9B,OAAOX,EAAoB,GAAD,OAAID,EAAJ,kBAAsBY,GAAtB,OAA2Bb,GACtD,CAEM,SAASc,EAAkBC,GAChC,OAAOb,EAAoB,GAAD,OAAID,EAAJ,wBAA4BD,EAA5B,kBAAyCe,GACpE,CAEM,SAASC,EAAmBH,GACjC,OAAOX,EAAoB,GAAD,OACrBD,EADqB,kBACHY,EADG,mBACUb,EADV,mBAG3B,CAEM,SAASiB,EAAmBJ,GACjC,OAAOX,EAAoB,GAAD,OACrBD,EADqB,kBACHY,EADG,mBACUb,EADV,0BAG3B,C,uFCKD,UAhCiB,WACf,OAA4BkB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,eAKjB,OAJAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,MAAgBa,KAAKJ,EACtB,GAAE,KAGD,+BACE,wBACGD,GACCA,EAAOM,QAAQC,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMd,IAC3BiB,MAAO,CACLC,KAAM,CACJV,SAAAA,KALR,SAUGM,EAAMK,kBAXFL,EAAMd,GADO,OAmBjC,C","sources":["components/API/FetchMovies.jsx","components/HomePage/HomePage.jsx"],"sourcesContent":["const KEY = '?api_key=c70b39411477d027ba1d4b2d81ddb9d1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWitchHendeling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found!'));\n}\n\nexport function fetchTrending() {\n  return fetchWitchHendeling(`${BASE_URL}/trending/movie/week${KEY}`);\n}\n\nexport function fetchMoviesById(id) {\n  return fetchWitchHendeling(`${BASE_URL}/movie/${id}${KEY}`);\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWitchHendeling(`${BASE_URL}/search/movie${KEY}&query=${query}`);\n}\n\nexport function fetchMoviesCredits(id) {\n  return fetchWitchHendeling(\n    `${BASE_URL}/movie/${id}/credits${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMoviesReviews(id) {\n  return fetchWitchHendeling(\n    `${BASE_URL}/movie/${id}/reviews${KEY}&language=en-US&page=1`\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrending } from 'components/API/FetchMovies';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    fetchTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <ul>\n        {movies &&\n          movies.results.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/${movie.id}`,\n                  state: {\n                    from: {\n                      location,\n                    },\n                  },\n                }}\n              >\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["KEY","BASE_URL","fetchWitchHendeling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMoviesById","id","fetchSearchMovies","query","fetchMoviesCredits","fetchMoviesReviews","useState","movies","setMovies","location","useLocation","useEffect","then","results","map","movie","to","pathname","state","from","original_title"],"sourceRoot":""}